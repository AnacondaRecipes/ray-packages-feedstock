diff --git a/.bazelrc b/.bazelrc
index a046909696..0931ca89f8 100644
--- a/.bazelrc
+++ b/.bazelrc
@@ -44,8 +44,8 @@ build --per_file_copt="\\.pb\\.cc$@-w"
 # Ignore one specific warning
 build --per_file_copt="event\\.cc$@-w"
 build --per_file_copt="logging\\.cc$@-w"
-build --per_file_copt="-\\.(asm|S)$,external/.*@-w"
-#build --per_file_copt="external/.*@-Wno-unused-result"
+build:linux --per_file_copt="-\\.(asm|S)$,external/.*@-w,-Wno-error=implicit-function-declaration"
+build:macos --per_file_copt="-\\.(asm|S)$,external/.*@-w,-Wno-error=implicit-function-declaration"
 # Ignore minor warnings for host tools, which we generally can't control
 build:clang-cl --host_copt="-Wno-inconsistent-missing-override"
 build:clang-cl --host_copt="-Wno-microsoft-unqualified-friend"
diff --git a/src/ray/gcs/gcs_server/gcs_placement_group_manager.cc b/src/ray/gcs/gcs_server/gcs_placement_group_manager.cc
index b1bca761d7..5e291f10c1 100644
--- a/src/ray/gcs/gcs_server/gcs_placement_group_manager.cc
+++ b/src/ray/gcs/gcs_server/gcs_placement_group_manager.cc
@@ -850,7 +850,7 @@ void GcsPlacementGroupManager::UpdatePlacementGroupLoad() {
       break;
     }
   }
-  gcs_resource_manager_.UpdatePlacementGroupLoad(move(placement_group_load));
+  gcs_resource_manager_.UpdatePlacementGroupLoad(std::move(placement_group_load));
 }
 
 void GcsPlacementGroupManager::Initialize(const GcsInitData &gcs_init_data) {
diff --git a/src/ray/thirdparty/dlmalloc.c b/src/ray/thirdparty/dlmalloc.c
index 62a2a0400c..44bf70fe2c 100644
--- a/src/ray/thirdparty/dlmalloc.c
+++ b/src/ray/thirdparty/dlmalloc.c
@@ -521,6 +521,9 @@ MAX_RELEASE_CHECK_RATE   default: 4095 unless not HAVE_MMAP
   improvement at the expense of carrying around more memory.
 */
 
+#ifdef __clang__
+#pragma clang diagnostic ignored "-Weverything"
+#endif
 
 /* Version identifier to allow people to support multiple versions */
 #ifndef DLMALLOC_VERSION
